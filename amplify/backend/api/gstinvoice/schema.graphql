enum PurchaseOrderStatus {
  DRAFT
  SENT
  CONFIRMED
  RECIEVED
  CANCELLED
  PARTIALLY_RECIEVED
}

type PurchaseOrder @model @auth(rules: [{allow: public}]) {
  id: ID!
  purchase_order_id: String
  purchase_order_number: String
  purchase_order_date: String
  expected_delivery_date: String
  from_company: String
  from_address: String
  from_gstin: String
  from_email: String
  from_phone: String
  to_customer: String
  to_address: String
  to_gstin: String
  to_email: String
  to_phone: String
  items: AWSJSON
  subtotal: String
  cgst: String
  sgst: String
  igst: String
  total: String
  notes: String
  terms_conditions: String
  customerID: ID! @index(name: "byCustomer")
  companyID: ID! @index(name: "byCompany")
  purchase_order_status: PurchaseOrderStatus
}

enum EmployeeStatus {
  ACTIVE
  INACTIVE
  INVITED
}

enum StockStatus {
  IN_STOCK
  OUT_OF_STOCK
  LOW_STOCK
}

type InventoryItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  item_code: String
  hsn_number: String
  name: String
  description: String
  unit: String
  rate: String
  current_stock: String
  stock_status: StockStatus
  category: String
  brand: String
  cgst: String
  sgst: String
  igst: String
  companyID: ID! @index(name: "byCompany")
}

type CompanyEmployee @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  adminID: ID! @index(name: "byAdmin")
  company_id: ID! @index(name: "byCompany")
  email: String
  userID: String
  profile_status: EmployeeStatus
  department: String
  employeeID: String
  permissionRole: String
  permissionMatrix: AWSJSON
}

type SubscriptionPlan @model @auth(rules: [{allow: public}]) {
  id: ID!
  title: String
  description: String
  cost: String
  users: Int
  isPaid: Boolean
}

type Admin @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: String
  phone: String
  subscriptionPlanID: String
  CompanyEmployees: [CompanyEmployee] @hasMany(indexName: "byAdmin", fields: ["id"])
  company_id: String
  userID: String
}

type Company @model @auth(rules: [{allow: public}]) {
  id: ID!
  company_name: String
  owner_name: String
  gstin: String
  billing_address: String
  email: String
  phone: String
  gst_category: String
  adminID: String
  CompanyEmployees: [CompanyEmployee] @hasMany(indexName: "byCompany", fields: ["id"])
  InventoryItems: [InventoryItem] @hasMany(indexName: "byCompany", fields: ["id"])
  shipping_address: String
  pincode: String
  city: String
  state: String
  country: String
  Customers: [Customer] @hasMany(indexName: "byCompany", fields: ["id"])
  Vendors: [Vendor] @hasMany(indexName: "byCompany", fields: ["id"])
  Invoices: [Invoice] @hasMany(indexName: "byCompany", fields: ["id"])
  Quotations: [Quotation] @hasMany(indexName: "byCompany", fields: ["id"])
  PurchaseOrders: [PurchaseOrder] @hasMany(indexName: "byCompany", fields: ["id"])
}

enum QuotationStatus {
  SENT
  DRAFT
  ACCEPTED
  REJECTED
  EXPIRED
  CONVERTED
}

enum InvoiceStatus {
  PAID
  PENDING
  OVERDUE
}

enum ProfileStatus {
  ACTIVE
  INACTIVE
}

type Vendor @model @auth(rules: [{allow: public}]) {
  id: ID!
  vendor_id: String
  company_name: String
  owner_name: String
  email: String
  phone: String
  payable_amount: Float
  billing_address: String
  vendor_status: ProfileStatus
  gstin: String
  shipping_address: String
  companyID: ID! @index(name: "byCompany")
  adminID: String
  city: String
  state: String
  pincode: String
  country: String
  pan_number: String
  note: String
}

type Customer @model @auth(rules: [{allow: public}]) {
  id: ID!
  customer_id: String
  company_name: String
  owner_name: String
  email: String
  phone: String
  outstanding_amount: Float
  billing_address: String
  customer_status: ProfileStatus
  Invoices: [Invoice] @hasMany(indexName: "byCustomer", fields: ["id"])
  Quotations: [Quotation] @hasMany(indexName: "byCustomer", fields: ["id"])
  gstin: String
  shipping_address: String
  city: String
  state: String
  pincode: String
  country: String
  pan_number: String
  credit_limit: String
  note: String
  companyID: ID! @index(name: "byCompany")
  adminID: String
  PurchaseOrders: [PurchaseOrder] @hasMany(indexName: "byCustomer", fields: ["id"])
}

type Quotation @model @auth(rules: [{allow: public}]) {
  id: ID!
  quotation_id: String
  quotation_status: QuotationStatus
  quotation_number: String
  quotation_date: AWSDate
  valid_until: AWSDate
  from_company: String
  from_address: String
  from_gstin: String
  from_email: String
  from_phone: String
  to_customer: String
  to_address: String
  to_gstin: String
  to_email: String
  to_phone: String
  items: AWSJSON
  subtotal: String
  cgst: String
  sgst: String
  igst: String
  total: String
  notes: String
  terms_conditions: String
  customerID: ID! @index(name: "byCustomer")
  companyID: ID! @index(name: "byCompany")
}

type Invoice @model @auth(rules: [{allow: public}]) {
  id: ID!
  invoice_id: String
  invoice_status: InvoiceStatus
  invoice_number: String
  invoice_date: AWSDate
  due_date: AWSDate
  from_company: String
  from_address: String
  from_gstin: String
  from_email: String
  from_phone: String
  to_customer: String
  to_address: String
  to_gstin: String
  to_email: String
  to_phone: String
  items: AWSJSON
  subtotal: String
  cgst: String
  sgst: String
  igst: String
  total: String
  notes: String
  terms_conditions: String
  customerID: ID! @index(name: "byCustomer")
  companyID: ID! @index(name: "byCompany")
}
 